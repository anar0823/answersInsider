Base Test Setup

import io.github.bonigarcia.wdm.WebDriverManager;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.support.PageFactory;
import org.testng.ITestResult;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Parameters;

import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.text.SimpleDateFormat;
import java.util.Date;

public class BaseTest {
    protected WebDriver driver;

    @Parameters("browser")
    @BeforeMethod
    public void setup(String browser) {
        if (browser.equalsIgnoreCase("chrome")) {
            WebDriverManager.chromedriver().setup();
            driver = new ChromeDriver();
        } else if (browser.equalsIgnoreCase("firefox")) {
            WebDriverManager.firefoxdriver().setup();
            driver = new FirefoxDriver();
        }
        driver.manage().window().maximize();
    }

    @AfterMethod
    public void tearDown(ITestResult result) throws IOException {
        if (ITestResult.FAILURE == result.getStatus()) {
            takeScreenshot(result.getName());
        }
        if (driver != null) {
            driver.quit();
        }
    }

    public void takeScreenshot(String testName) throws IOException {
        TakesScreenshot ts = (TakesScreenshot) driver;
        File srcFile = ts.getScreenshotAs(OutputType.FILE);
        String timestamp = new SimpleDateFormat("yyyyMMddhhmmss").format(new Date());
        File destFile = new File("./screenshots/" + testName + "_" + timestamp + ".png");
        Files.copy(srcFile.toPath(), destFile.toPath());
    }
}


HomePage.java

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.PageFactory;

public class HomePage {
    WebDriver driver;

    @FindBy(tagName = "title")
    WebElement pageTitle;

    @FindBy(xpath = "//a[contains(text(),'Company')]")
    WebElement companyMenu;

    @FindBy(xpath = "//a[contains(text(),'Careers')]")
    WebElement careersMenu;

    public HomePage(WebDriver driver) {
        this.driver = driver;
        PageFactory.initElements(driver, this);
    }

    public boolean isHomePageOpened() {
        return pageTitle.getText().contains("Insider");
    }

    public void navigateToCareers() {
        companyMenu.click();
        careersMenu.click();
    }
}


CareersPage.java

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.PageFactory;

public class CareersPage {
    WebDriver driver;

    @FindBy(xpath = "//h1[contains(text(),'Careers')]")
    WebElement careersHeader;

    @FindBy(id = "locations")
    WebElement locationsBlock;

    @FindBy(id = "teams")
    WebElement teamsBlock;

    @FindBy(id = "life-at-insider")
    WebElement lifeAtInsiderBlock;

    public CareersPage(WebDriver driver) {
        this.driver = driver;
        PageFactory.initElements(driver, this);
    }

    public boolean areCareersElementsPresent() {
        return careersHeader.isDisplayed() && locationsBlock.isDisplayed() &&
                teamsBlock.isDisplayed() && lifeAtInsiderBlock.isDisplayed();
    }
}


QualityAssuranceJobsPage.java

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.PageFactory;

import java.util.List;

public class QualityAssuranceJobsPage {
    WebDriver driver;

    @FindBy(xpath = "//a[contains(text(),'See all QA jobs')]")
    WebElement seeAllQAJobsButton;

    @FindBy(id = "filter-location")
    WebElement locationFilter;

    @FindBy(id = "filter-department")
    WebElement departmentFilter;

    @FindBy(css = ".job-list")
    List<WebElement> jobsList;

    @FindBy(xpath = "//button[contains(text(),'View Role')]")
    List<WebElement> viewRoleButtons;

    public QualityAssuranceJobsPage(WebDriver driver) {
        this.driver = driver;
        PageFactory.initElements(driver, this);
    }

    public void filterJobs(String location, String department) {
        locationFilter.sendKeys(location);
        departmentFilter.sendKeys(department);
    }

    public boolean areJobsDisplayed() {
        return jobsList.size() > 0;
    }

    public boolean areJobDetailsCorrect() {
        for (WebElement job : jobsList) {
            if (!job.getText().contains("Quality Assurance") || !job.getText().contains("Istanbul, Turkey")) {
                return false;
            }
        }
        return true;
    }

    public void clickViewRole(int index) {
        viewRoleButtons.get(index).click();
    }
}



Test Cases:

InsiderTests.java

import org.testng.Assert;
import org.testng.annotations.Test;

public class InsiderTests extends BaseTest {

    @Test
    public void testHomePageIsOpened() {
        driver.get("https://useinsider.com/");
        HomePage homePage = new HomePage(driver);
        Assert.assertTrue(homePage.isHomePageOpened(), "Homepage is not opened.");
    }

    @Test
    public void testCareersPageAndBlocks() {
        driver.get("https://useinsider.com/");
        HomePage homePage = new HomePage(driver);
        homePage.navigateToCareers();

        CareersPage careersPage = new CareersPage(driver);
        Assert.assertTrue(careersPage.areCareersElementsPresent(), "Career page or blocks are missing.");
    }

    @Test
    public void testQualityAssuranceJobs() {
        driver.get("https://useinsider.com/careers/quality-assurance/");
        QualityAssuranceJobsPage qaJobsPage = new QualityAssuranceJobsPage(driver);
        qaJobsPage.seeAllQAJobsButton.click();
        qaJobsPage.filterJobs("Istanbul, Turkey", "Quality Assurance");

        Assert.assertTrue(qaJobsPage.areJobsDisplayed(), "No jobs found after filtering.");
        Assert.assertTrue(qaJobsPage.areJobDetailsCorrect(), "Job details do not match the criteria.");
    }

    @Test
    public void testViewRoleRedirect() {
        driver.get("https://useinsider.com/careers/quality-assurance/");
        QualityAssuranceJobsPage qaJobsPage = new QualityAssuranceJobsPage(driver);
        qaJobsPage.seeAllQAJobsButton.click();
        qaJobsPage.filterJobs("Istanbul, Turkey", "Quality Assurance");
        
        qaJobsPage.clickViewRole(0);
        Assert.assertTrue(driver.getCurrentUrl().contains("lever.co"), "Not redirected to Lever application form.");
    }
}



